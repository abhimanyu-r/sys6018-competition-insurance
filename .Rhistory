ei.E <- resid(E.lm)
fit.E <- fitted(E.lm)
plot(ei.E ~ fit.E, main = "Residuals with variance proportional to 30-E(y)")
abline(h = 0)
set.seed(10)
x.F <- seq(from = 0, to = 50, length.out = 30)
y.F <- 3 + 0.5*x.F + rnorm(30, 4, ((3+0.5*x.F)*(30-(3+0.5*x.F))))
data.F = data.frame(x.F, y.F)
F.lm <- lm(y.F ~ x.F, data = data.F)
ei.F <- resid(F.lm)
fit.F <- fitted(F.lm)
plot(ei.F ~ fit.F, main = "Residuals with variance proportional to E(y)(30-E(y))")
abline(h = 0)
set.seed(10)
x.F <- seq(from = 25, to = 50, length.out = 30)
y.F <- 3 + 0.5*x.F + rnorm(30, 4, ((3+0.5*x.F)*(30-(3+0.5*x.F))))
data.F = data.frame(x.F, y.F)
F.lm <- lm(y.F ~ x.F, data = data.F)
ei.F <- resid(F.lm)
fit.F <- fitted(F.lm)
plot(ei.F ~ fit.F, main = "Residuals with variance proportional to E(y)(30-E(y))")
abline(h = 0)
set.seed(10)
x.F <- seq(from = 25, to = 35, length.out = 30)
y.F <- 3 + 0.5*x.F + rnorm(30, 4, ((3+0.5*x.F)*(30-(3+0.5*x.F))))
data.F = data.frame(x.F, y.F)
F.lm <- lm(y.F ~ x.F, data = data.F)
ei.F <- resid(F.lm)
fit.F <- fitted(F.lm)
plot(ei.F ~ fit.F, main = "Residuals with variance proportional to E(y)(30-E(y))")
abline(h = 0)
x.C <- seq(from = 0, to = 50, length.out = 30)
y.C <- 3 + 0.5*x.C + rnorm(30, 0, ((3 + 0.5*x.C)^2))
y.C <- y.C + abs(min(y.C)) + 1
data.C = data.frame(x.C,y.C)
C.lm <- lm(y.C ~ x.C, data = data.C)
ei.C <- resid(C.lm)
fit.C <- fitted(C.lm)
plot(ei.C ~ fit.C, main = "Residuals with variance proportional to E(y)^2.")
abline(h = 0)
set.seed(30)
x.C <- seq(from = 0, to = 50, length.out = 30)
y.C <- 3 + 0.5*x.C + rnorm(30, 0, ((3 + 0.5*x.C)^2))
y.C <- y.C + abs(min(y.C)) + 1
data.C = data.frame(x.C,y.C)
C.lm <- lm(y.C ~ x.C, data = data.C)
ei.C <- resid(C.lm)
fit.C <- fitted(C.lm)
plot(ei.C ~ fit.C, main = "Residuals with variance proportional to E(y)^2.")
abline(h = 0)
set.seed(30)
x.C <- seq(from = 0, to = 50, length.out = 30)
y.C <- 3 + 0.5*x.C + rnorm(30, 0, ((3 + 0.5*x.C)^2))
y.C <- y.C + abs(min(y.C)) + 1
data.C = data.frame(x.C,y.C)
C.lm <- lm(y.C ~ x.C, data = data.C)
ei.C <- resid(C.lm)
fit.C <- fitted(C.lm)
plot(ei.C ~ fit.C, main = "Residuals with variance proportional to E(y)^2.")
abline(h = 0)
x.C <- seq(from = 0, to = 50, length.out = 30)
y.C <- 3 + 0.5*x.C + rnorm(30, 0, ((3 + 0.5*x.C)^2))
y.C <- y.C + abs(min(y.C)) + 1
data.C = data.frame(x.C,y.C)
C.lm <- lm(y.C ~ x.C, data = data.C)
ei.C <- resid(C.lm)
fit.C <- fitted(C.lm)
plot(ei.C ~ fit.C, main = "Residuals with variance proportional to E(y)^2.")
abline(h = 0)
x.C <- seq(from = 0, to = 50, length.out = 30)
y.C <- 3 + 0.5*x.C + rnorm(30, 0, ((3 + 0.5*x.C)^2))
y.C <- y.C + abs(min(y.C)) + 1
data.C = data.frame(x.C,y.C)
C.lm <- lm(y.C ~ x.C, data = data.C)
ei.C <- resid(C.lm)
fit.C <- fitted(C.lm)
plot(ei.C ~ fit.C, main = "Residuals with variance proportional to E(y)^2.")
abline(h = 0)
x.C <- seq(from = 0, to = 50, length.out = 30)
y.C <- 3 + 0.5*x.C + rnorm(30, 0, ((3 + 0.5*x.C)^2))
y.C <- y.C + abs(min(y.C)) + 1
data.C = data.frame(x.C,y.C)
C.lm <- lm(y.C ~ x.C, data = data.C)
ei.C <- resid(C.lm)
fit.C <- fitted(C.lm)
plot(ei.C ~ fit.C, main = "Residuals with variance proportional to E(y)^2.")
abline(h = 0)
set.seed(30)
x.C <- seq(from = 0, to = 50, length.out = 30)
y.C <- 3 + 0.5*x.C + rnorm(30, 0, ((3 + 0.5*x.C)^2))
y.C <- y.C + abs(min(y.C)) + 1
data.C = data.frame(x.C,y.C)
C.lm <- lm(y.C ~ x.C, data = data.C)
ei.C <- resid(C.lm)
fit.C <- fitted(C.lm)
plot(ei.C ~ fit.C, main = "Residuals with variance proportional to E(y)^2.")
abline(h = 0)
set.seed(45)
x.C <- seq(from = 0, to = 50, length.out = 30)
y.C <- 3 + 0.5*x.C + rnorm(30, 0, ((3 + 0.5*x.C)^2))
y.C <- y.C + abs(min(y.C)) + 1
data.C = data.frame(x.C,y.C)
C.lm <- lm(y.C ~ x.C, data = data.C)
ei.C <- resid(C.lm)
fit.C <- fitted(C.lm)
plot(ei.C ~ fit.C, main = "Residuals with variance proportional to E(y)^2.")
abline(h = 0)
par(mfrow = c(3, 1))
OLS.A <- lm(y.B ~ x.B, data = data.B)
summary(OLS.A)
fitO.A <- fitted(OLS.A)
set.seed(30)
x.B <- seq(from = 0, to = 50, length.out = 30)
y.B <- 3 + 0.5*x.B + rnorm(30, 4, (3+ 0.5*x.B))
y.B <- y.B + abs(min(y.B))
data.B = data.frame(x.B,y.B)
B.lm <- lm(y.B~x.B, data = data.B)
ei.B<- resid(B.lm)
fit.B<- fitted(B.lm)
set.seed(45)
x.C <- seq(from = 0, to = 50, length.out = 30)
y.C <- 3 + 0.5*x.C + rnorm(30, 0, ((3 + 0.5*x.C)^2))
y.C <- y.C + abs(min(y.C)) + 1
data.C = data.frame(x.C,y.C)
C.lm <- lm(y.C ~ x.C, data = data.C)
ei.C <- resid(C.lm)
fit.C <- fitted(C.lm)
set.seed(30)
x.D <- seq(from = 0, to = 50, length.out = 30)
y.D <- 3 + 0.5*x.D + rnorm(30, 4, (1/(3+0.5*x.D)))
y.D <- y.D + abs(min(y.D))
data.D = data.frame(x.D, y.D)
D.lm <- lm(y.D ~ x.D, data = data.D)
ei.D <- resid(D.lm)
fit.D <- fitted(D.lm)
OLS.A <- lm(y.B ~ x.B, data = data.B)
summary(OLS.A)
fitO.A <- fitted(OLS.A)
eiO.A <- resid(OLS.A)
plot(eiO.A ~ fitO.A, main = "OLS")
abline(h = 0)
tOLS.A <- lm(sqrt(y.B)~x.B, data = data.B)
summary(tOLS.A)
fitt.A <- fitted(tOLS.A)
eit.A <- resid(tOLS.A)
plot(eit.A ~ fitt.A, main = "Transformed")
abline(h = 0)
abs.ei.A <- abs(resid(OLS.A))
resid.lm.A <- lm(abs.ei.A ~ x.A, data = data.B)
abs.ei.A <- abs(resid(OLS.A))
resid.lm.A <- lm(abs.ei.A ~ x.B, data = data.B)
wt.A <- 1/fitted(resid.lm.A)^2
wOLS.A<- glm(y.B ~ x.B, data = data.B, weights = wt.A)
summary(wOLS.A)
fitw.A <- fitted(wOLS.A)
eiw.A <- resid(wOLS.A)
plot(eiw.A ~ fitw.A)
abline(h = 0, main = "WLS")
par(mfrow = c(1, 3))
OLS.A <- lm(y.B ~ x.B, data = data.B)
summary(OLS.A)
fitO.A <- fitted(OLS.A)
eiO.A <- resid(OLS.A)
plot(eiO.A ~ fitO.A, main = "OLS")
abline(h = 0)
tOLS.A <- lm(sqrt(y.B)~x.B, data = data.B)
summary(tOLS.A)
fitt.A <- fitted(tOLS.A)
eit.A <- resid(tOLS.A)
plot(eit.A ~ fitt.A, main = "Transformed")
abline(h = 0)
tOLS.A <- lm(sqrt(y.B)~x.B, data = data.B)
summary(tOLS.A)
fitt.A <- fitted(tOLS.A)
eit.A <- resid(tOLS.A)
plot(eit.A ~ fitt.A, main = "Transformed")
abline(h = 0)
OLS.A <- lm(y.B ~ x.B, data = data.B)
summary(OLS.A)
fitO.A <- fitted(OLS.A)
eiO.A <- resid(OLS.A)
plot(eiO.A ~ fitO.A, main = "OLS")
abline(h = 0)
tOLS.A <- lm(sqrt(y.B)~x.B, data = data.B)
summary(tOLS.A)
fitt.A <- fitted(tOLS.A)
eit.A <- resid(tOLS.A)
plot(eit.A ~ fitt.A, main = "Transformed")
abline(h = 0)
data.B["y.B.trans"] <-  sqrt(data.B$y.B)
data.B["y.B.trans"] <-  sqrt(data.B$y.B)
tOLS.A <- lm(y.B.trans~x.B, data = data.B)
summary(tOLS.A)
fitt.A <- fitted(tOLS.A)
eit.A <- resid(tOLS.A)
plot(eit.A ~ fitt.A, main = "Transformed")
abline(h = 0)
x.B <- seq(from = 0, to = 50, length.out = 30)
y.B <- 3 + 0.5*x.B + rnorm(30, 4, (3+ 0.5*x.B))
y.B <- y.B + abs(min(y.B))
data.B = data.frame(x.B,y.B)
B.lm <- lm(y.B~x.B, data = data.B)
data.B["y.B.trans"] <-  sqrt(data.B$y.B)
tOLS.A <- lm(y.B.trans~x.B, data = data.B)
summary(tOLS.A)
fitt.A <- fitted(tOLS.A)
eit.A <- resid(tOLS.A)
plot(eit.A ~ fitt.A, main = "Transformed")
abline(h = 0)
boxcox(OLS.A)
library(MASS) # For Box Cox
boxcox(OLS.A)
OLS.A <- lm(y.B ~ x.B, data = data.B)
OLS.A
data.B$y.B
boxcox(OLS.A)
set.seed(30)
x.B <- seq(from = 0, to = 50, length.out = 30)
y.B <- 3 + 0.5*x.B + rnorm(30, 4, (3+ 0.5*x.B))
y.B <- y.B + abs(min(y.B))
data.B = data.frame(x.B,y.B)
B.lm <- lm(y.B~x.B, data = data.B)
OLS.A <- lm(y.B ~ x.B, data = data.B)
boxcox(OLS.A)
x.B <- seq(from = 0, to = 50, length.out = 30)
y.B <- 3 + 0.5*x.B + rnorm(30, 4, (3+ 0.5*x.B))
y.B <- y.B + abs(min(y.B)) + 1
data.B = data.frame(x.B,y.B)
B.lm <- lm(y.B~x.B, data = data.B)
OLS.A <- lm(y.B ~ x.B, data = data.B)
boxcox(OLS.A)
data.B["y.B.trans"] <-  sqrt(data.B$y.B)
tOLS.A <- lm(y.B.trans~x.B, data = data.B)
summary(tOLS.A)
fitt.A <- fitted(tOLS.A)
eit.A <- resid(tOLS.A)
plot(eit.A ~ fitt.A, main = "Transformed")
abline(h = 0)
abs.ei.A <- abs(resid(OLS.A))
resid.lm.A <- lm(abs.ei.A ~ x.B, data = data.B)
wt.A <- 1/fitted(resid.lm.A)^2
wOLS.A<- glm(y.B ~ x.B, data = data.B, weights = wt.A)
summary(wOLS.A)
fitw.A <- fitted(wOLS.A)
eiw.A <- resid(wOLS.A)
plot(eiw.A ~ fitw.A)
abline(h = 0, main = "WLS")
set.seed(30)
x.B <- seq(from = 0, to = 50, length.out = 30)
y.B <- 3 + 0.5*x.B + rnorm(30, 4, (3+ 0.5*x.B))
y.B <- y.B + abs(min(y.B)) + 1
data.B = data.frame(x.B,y.B)
B.lm <- lm(y.B~x.B, data = data.B)
ei.B<- resid(B.lm)
fit.B<- fitted(B.lm)
plot(ei.B~fit.B, main = "Residuals with variance proportional to E(y).")
abline(h = 0)
par(mfrow = c(1, 3))
OLS.A <- lm(y.B ~ x.B, data = data.B)
summary(OLS.A)
eiO.A <- resid(OLS.A)
fitO.A <- fitted(OLS.A)
plot(eiO.A ~ fitO.A, main = "OLS")
abline(h = 0)
data.B["y.B.trans"] <-  sqrt(data.B$y.B)
tOLS.A <- lm(y.B.trans~x.B, data = data.B)
summary(tOLS.A)
fitt.A <- fitted(tOLS.A)
eit.A <- resid(tOLS.A)
plot(eit.A ~ fitt.A, main = "Transformed")
abline(h = 0)
abs.ei.A <- abs(resid(OLS.A))
resid.lm.A <- lm(abs.ei.A ~ x.B, data = data.B)
wt.A <- 1/fitted(resid.lm.A)^2
wOLS.A<- glm(y.B ~ x.B, data = data.B, weights = wt.A)
summary(wOLS.A)
fitw.A <- fitted(wOLS.A)
eiw.A <- resid(wOLS.A)
plot(eiw.A ~ fitw.A)
abline(h = 0, main = "WLS")
par(mfrow = c(1, 3))
# Ordinary Least Squares
OLS.A <- lm(y.B ~ x.B, data = data.B)
summary(OLS.A)
fitO.A <- fitted(OLS.A)
eiO.A <- resid(OLS.A)
plot(eiO.A ~ fitO.A, main = "OLS")
abline(h = 0)
# Transformed
boxcox(OLS.A)
# Both intuition and the box cox tell us that sqrt(y)
# is the best transformation.
data.B["y.B.trans"] <-  sqrt(data.B$y.B)
tOLS.A <- lm(y.B.trans~x.B, data = data.B)
summary(tOLS.A)
fitt.A <- fitted(tOLS.A)
eit.A <- resid(tOLS.A)
plot(eit.A ~ fitt.A, main = "Transformed")
abline(h = 0)
# Weighted Least Squares
abs.ei.A <- abs(resid(OLS.A))
resid.lm.A <- lm(abs.ei.A ~ x.B, data = data.B)
wt.A <- 1/fitted(resid.lm.A)^2
wOLS.A<- glm(y.B ~ x.B, data = data.B, weights = wt.A)
summary(wOLS.A)
fitw.A <- fitted(wOLS.A)
eiw.A <- resid(wOLS.A)
plot(eiw.A ~ fitw.A, main = "WLS")
abline(h = 0)
# Ordinary Least Squares
OLS.A <- lm(y.B ~ x.B, data = data.B)
summary(OLS.A)
fitO.A <- fitted(OLS.A)
eiO.A <- resid(OLS.A)
plot(eiO.A ~ fitO.A, main = "OLS")
abline(h = 0)
# Transformed
# boxcox(OLS.A)
# Both intuition and the box cox tell us that sqrt(y)
# is the best transformation.
data.B["y.B.trans"] <-  sqrt(data.B$y.B)
tOLS.A <- lm(y.B.trans~x.B, data = data.B)
summary(tOLS.A)
fitt.A <- fitted(tOLS.A)
eit.A <- resid(tOLS.A)
plot(eit.A ~ fitt.A, main = "Transformed")
abline(h = 0)
# Weighted Least Squares
abs.ei.A <- abs(resid(OLS.A))
resid.lm.A <- lm(abs.ei.A ~ x.B, data = data.B)
wt.A <- 1/fitted(resid.lm.A)^2
wOLS.A<- glm(y.B ~ x.B, data = data.B, weights = wt.A)
summary(wOLS.A)
fitw.A <- fitted(wOLS.A)
eiw.A <- resid(wOLS.A)
plot(eiw.A ~ fitw.A, main = "WLS")
abline(h = 0)
par(mfrow = c(1, 3))
OLS.A <- lm(y.B ~ x.B, data = data.B)
summary(OLS.A)
fitO.A <- fitted(OLS.A)
eiO.A <- resid(OLS.A)
plot(eiO.A ~ fitO.A, main = "OLS")
abline(h = 0)
data.B["y.B.trans"] <-  sqrt(data.B$y.B)
summary(tOLS.A)
eit.A <- resid(tOLS.A)
plot(eit.A ~ fitt.A, main = "Transformed")
tOLS.A <- lm(y.B.trans~x.B, data = data.B)
fitt.A <- fitted(tOLS.A)
abline(h = 0)
abs.ei.A <- abs(resid(OLS.A))
resid.lm.A <- lm(abs.ei.A ~ x.B, data = data.B)
wt.A <- 1/fitted(resid.lm.A)^2
wOLS.A<- glm(y.B ~ x.B, data = data.B, weights = wt.A)
summary(wOLS.A)
fitw.A <- fitted(wOLS.A)
eiw.A <- resid(wOLS.A)
plot(eiw.A ~ fitw.A, main = "WLS")
abline(h = 0)
OLS.B <- lm(y.C ~ x.C, data = data.C)
summary(OLS.B)
fitO.B <- fitted(OLS.B)
eiO.B <- resid(OLS.B)
plot(eiO.B ~ fitO.B, main = "OLS")
abline(h = 0)
boxcox(OLS.B)
boxcox(OLS.B)
tOLS.B <- lm(log10(y.C) ~ x.C, data = data.C)
summary(tOLS.B)
fitt.B <- fitted(tOLS.B)
eit.B <- resid(tOLS.B)
plot(eit.B ~ fitt.B, main = "Transformed")
tOLS.B <- lm(sqrt(y.C) ~ x.C, data = data.C)
summary(tOLS.B)
eit.B <- resid(tOLS.B)
fitt.B <- fitted(tOLS.B)
plot(eit.B ~ fitt.B, main = "Transformed")
abs.ei.B <- abs(resid(OLS.B))
resid.lm.B <- lm(abs.ei.B ~ x.C, data = data.C)
wt.B <- 1/fitted(resid.lm.B)^2
wOLS.B<- glm(y.C ~ x.C, data = data.C, weights = wt.B)
summary(wOLS.B)
fitw.B <- fitted(wOLS.B)
eiw.B <- resid(wOLS.B)
plot(eiw.B ~ fitw.B, main = "WLS")
abline(h = 0)
# Ordinary Least Squares
OLS.B <- lm(y.C ~ x.C, data = data.C)
summary(OLS.B)
fitO.B <- fitted(OLS.B)
eiO.B <- resid(OLS.B)
plot(eiO.B ~ fitO.B, main = "OLS")
abline(h = 0)
# Transformed
# boxcox(OLS.B)
# Normally, log10(y) is the transformation for this case,
# but box cox say sqrt(y) so we tried both and log10(y)
# was better.
tOLS.B <- lm(sqrt(y.C) ~ x.C, data = data.C)
summary(tOLS.B)
fitt.B <- fitted(tOLS.B)
eit.B <- resid(tOLS.B)
plot(eit.B ~ fitt.B, main = "Transformed")
abline(h = 0)
# Weighted Least Squares
abs.ei.B <- abs(resid(OLS.B))
resid.lm.B <- lm(abs.ei.B ~ x.C, data = data.C)
wt.B <- 1/fitted(resid.lm.B)^2
wOLS.B<- glm(y.C ~ x.C, data = data.C, weights = wt.B)
summary(wOLS.B)
fitw.B <- fitted(wOLS.B)
eiw.B <- resid(wOLS.B)
plot(eiw.B ~ fitw.B, main = "WLS")
abline(h = 0)
OLS.B <- lm(y.C ~ x.C, data = data.C)
summary(OLS.B)
fitO.B <- fitted(OLS.B)
eiO.B <- resid(OLS.B)
plot(eiO.B ~ fitO.B, main = "OLS")
abline(h = 0)
tOLS.B <- lm(log10(y.C) ~ x.C, data = data.C)
summary(tOLS.B)
fitt.B <- fitted(tOLS.B)
eit.B <- resid(tOLS.B)
plot(eit.B ~ fitt.B, main = "Transformed")
abline(h = 0)
abs.ei.B <- abs(resid(OLS.B))
resid.lm.B <- lm(abs.ei.B ~ x.C, data = data.C)
wt.B <- 1/fitted(resid.lm.B)^2
wOLS.B<- glm(y.C ~ x.C, data = data.C, weights = wt.B)
summary(wOLS.B)
fitw.B <- fitted(wOLS.B)
eiw.B <- resid(wOLS.B)
plot(eiw.B ~ fitw.B, main = "WLS")
abline(h = 0)
OLS.C <- lm(y.D ~ x.D, data = data.D)
summary(OLS.C)
fitO.C <- fitted(OLS.C)
eiO.C <- resid(OLS.C)
plot(eiO.C ~ fitO.C, main = "OLS")
abline(h = 0)
boxcox(OLS.C)
set.seed(30)
x.D <- seq(from = 0, to = 50, length.out = 30)
y.D <- 3 + 0.5*x.D + rnorm(30, 4, (1/(3+0.5*x.D)))
data.D = data.frame(x.D, y.D)
D.lm <- lm(y.D ~ x.D, data = data.D)
y.D <- y.D + abs(min(y.D)) + 1
ei.D <- resid(D.lm)
plot(ei.D ~ fit.D, main = "Residuals with variance proportional to 1/E(y).")
fit.D <- fitted(D.lm)
abline(h = 0)
OLS.C <- lm(y.D ~ x.D, data = data.D)
summary(OLS.C)
fitO.C <- fitted(OLS.C)
eiO.C <- resid(OLS.C)
plot(eiO.C ~ fitO.C, main = "OLS")
abline(h = 0)
tOLS.C <- lm(y.D~, data = data.D)
tOLS.C <- lm(log10(y.D) ~ x.D, data = data.D)
summary(tOLS.C)
fitt.C <- fitted(tOLS.C)
eit.C <- resid(tOLS.C)
plot(eit.C ~ fitt.C, main = "Transformed")
tOLS.C <- lm(sqrt(y.D) ~ x.D, data = data.D)
summary(tOLS.C)
fitt.C <- fitted(tOLS.C)
eit.C <- resid(tOLS.C)
plot(eit.C ~ fitt.C, main = "Transformed")
abline(h = 0)
par(mfrow = c(1, 3))
OLS.C <- lm(y.D ~ x.D, data = data.D)
summary(OLS.C)
fitO.C <- fitted(OLS.C)
eiO.C <- resid(OLS.C)
plot(eiO.C ~ fitO.C, main = "OLS")
abline(h = 0)
tOLS.C <- lm(y.D ~ x.D, data = data.D)
summary(tOLS.C)
fitt.C <- fitted(tOLS.C)
eit.C <- resid(tOLS.C)
plot(eit.C ~ fitt.C, main = "Transformed")
abline(h = 0)
abs.ei.C <- abs(resid(OLS.C))
resid.lm.C <- lm(abs.ei.C ~ x.C, data = data.B)
wt.C <- 1/fitted(resid.lm.C)^2
wOLS.C<- glm(y.D ~ x.D, data = data.D, weights = wt.C)
summary(wOLS.C)
fitw.C <- fitted(wOLS.C)
eiw.C <- resid(wOLS.C)
plot(eiw.C ~ fitw.C, main = "WLS")
abline(h = 0)
source('~/Fall 2017/STAT/Team HW/5/teamassign05_final.R', echo=TRUE)
setwd("C:\Users/Student/Box Sync/Fall 2017/Data Mining/Kaggle/sys6018-competition-insurance/")
setwd("C:/Users/Student/Box Sync/Fall 2017/Data Mining/Kaggle/sys6018-competition-insurance/")
install.packages(
"traingle"
)
library(readr)
sample_sub <- read_csv("sample_submission.csv")
View(sample_sub)
install.packages("triangle")
library(triangle)
preds <- rtriangle(n = nrow(sample_sub), a = 0, b = 1, c = 0.5)
preds[1:10]
ret <- data.frame(id = sample_sub$id, target = preds)
write_csv("/local csv/random_guess.csv", ret)
ret
write_csv(ret, "/local csv/random_guess.csv")
write_csv(ret, "~/local csv/random_guess.csv")
write_csv(ret, "random_guess.csv")
